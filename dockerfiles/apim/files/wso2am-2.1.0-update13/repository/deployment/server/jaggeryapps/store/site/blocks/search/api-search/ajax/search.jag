<%
include("/jagg/jagg.jag");

(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, query, result, resultSearch,username, start,end, tenantDomain,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();

    var validation = {
        "action": { type: "safetext"},
        "start": { type: "number"},
        "end": { type: "number"},
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
            print({
                error:true,
                message: msg.error.invalidInputs(validation_errors)
            });        
    }else if (action == "searchAPIs" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        query = request.getParameter("query");
        tenantDomain= jagg.getTenantDomain();
        start = request.getParameter("start");
        end = request.getParameter("end");
        var limitAttributes =  request.getParameter("limitAttributes");
        var state = null;
        if (request.getParameter("type") == "production") {
            state = "PUBLISHED";
        } else if (request.getParameter("type") == "prototyped") {
            state = "PROTOTYPED";
        }

        mod = jagg.module("search");

        if (limitAttributes == null || limitAttributes.toLowerCase() != "true") {
            limitAttributes = "false";
        }

        resultSearch = mod.searchPaginatedAPIs(query, tenantDomain, start, end, limitAttributes, state);

        if (resultSearch.error) {
            obj = {
                error:true,
                message:resultSearch.result.message
            };
        } else {
            obj = {
                error:false,
                result:resultSearch.result.apis
            }
        }
        print(obj);
    } else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
