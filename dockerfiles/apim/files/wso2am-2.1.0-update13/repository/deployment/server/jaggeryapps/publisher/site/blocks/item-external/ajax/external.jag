<%
include("/jagg/jagg.jag");

if(jagg.isCSRFTokenValid())
(function () {
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, result, username,
        action = request.getParameter("action"),
        site = require("/site/conf/site.json"),
        msg = require("/site/conf/ui-messages.jag");


    if(jagg.getUser() == null){
        print({
            error:true,
            message:'timeout'
        });
    }else{
        if (action === "updateExternal" && request.getMethod() == 'POST') {

            mod = jagg.module("api");
            var apiData = {};
       
            apiData.request = request;
            apiData.apiName = request.getParameter("name", "UTF-8");
            apiData.version = request.getParameter("version");
            apiData.provider= request.getParameter("provider");

            var externalAPIStoresArray = new Array();
            var externalAPIStores = request.getParameter("externalAPIStores");
            if(externalAPIStores!=null && externalAPIStores != ''){
		        if(externalAPIStores=="REMOVEALL"){
			        externalAPIStores = " ::";
		            }
            	var externalAPIStoresVals=externalAPIStores.split("::");
             		for(var k=0;k<externalAPIStoresVals.length;k++){
             			if(externalAPIStoresVals[k]!=''){
             				externalAPIStoresArray.push(externalAPIStoresVals[k]);
             			}
             		}

             		apiData.externalAPIStores = externalAPIStoresArray;

            		result = mod.updateExternalAPIStores(apiData);

            		if (result.error==true) {
            			var message = result.message;
            			if (message == null) {
            				message = "Error while publishing to external stores";
            			}
                		obj = {
                    		error:true,
                    		message:message
                		};
            		} else {
                		obj = {
                    		error:false
                		}
            		}

            		print(obj);
            } else {
            	 print({
                      error:true,
                      message:"No External Stores selected"
                  });
            }
        }
        else {
            print({
                      error:true,
                      message:msg.error.invalidAction(action)
                  });
        }
    }
}());
%>
