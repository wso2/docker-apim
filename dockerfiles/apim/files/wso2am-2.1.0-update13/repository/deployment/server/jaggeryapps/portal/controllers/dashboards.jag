<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var pageId;
var dashboard;
var fresh;

(function () {
    var vars;
    var dashboardId;
    var matcher = new URIMatcher(request.getRequestURI());

    if (matcher.match('/dashboards/{id}') || matcher.match('/dashboards/{id}/{page}')) {
        vars = matcher.elements();
        dashboardId = vars.id;
        pageId = vars.page;
    }

    // If User request for portal/dashboards, redirect user to dashboard list.
    if (!dashboardId) {
        if (!user) {
            sendLogin();
            return;
        }

        if (userDomain !== (urlDomain || superDomain)) {
            response.sendError(401, 'Designer access not authorized of this tenant');
            return;
        }

        include(utils.resolvePath("templates/index.jag"));
        return;
    }

    var dashboards;
    var editor;
    var isCustomize;
    var toReset;
    var method = request.getMethod();

    if (method === 'GET') {
        dashboards = require('/modules/dashboards.js');
        utils.sandbox(context, function () {
            dashboard = dashboards.getAsset(dashboardId);
        });

        if (!dashboard) {
            response.sendError(404, "Dashboard '" + dashboardId + "' cannot be found");
            return;
        }
        
        // Verify the original dashboard when returning a custom dashboard
        if (dashboard.isUserCustom) {
            
            // Get the original dashboard
            var originalDashboard;
            utils.sandbox(context, function() {
                originalDashboard = dashboards.getAsset(dashboardId, true);
            });
        
            // If the original dashboard is deleted, returns 404
            if (! originalDashboard) {
                response.sendError(404, "Dashboard '" + dashboardId + "' cannot be found");
                return;
            }
            
            // If the user doesn't have any permission on the original dashboard, returns 401
            var authorized = false;
            
            // To view personalized dashboard, the user should have logged in, in the same domain and should have either editor or viewer permissions
            if (user && user.domain == (urlDomain || superDomain) && 
                (utils.allowed(user.roles, originalDashboard.permissions.editors) || utils.allowed(user.roles, originalDashboard.permissions.viewers))) {
                authorized = true;                
            }
            
            if (! authorized) {
                // If there is no anon view defined send the unauthorized error, else return the anon view
                if (!originalDashboard.isanon) {
                    response.sendError(401, "Access to dashboard '" + dashboardId + "' is denied");
                    return;   
                }
                
                dashboard = originalDashboard;
            }
        }

        isCustomize = request.getParameter('custom');

        if (isCustomize) {
            for (var i = 0; i < dashboard.pages.length; i++) {
                dashboard.pages[i].isanon = false;
            }

            dashboards.copy(dashboard);
            response.sendRedirect(tenantedUrlPrefix + 'dashboards/' + dashboardId + '?editor=true');
            return;
        }

        toReset = request.getParameter('reset');

        if (toReset) {
            dashboards.reset(dashboard.id);
            response.sendRedirect(tenantedUrlPrefix + 'dashboards/' + dashboardId);
            return;
        }

        if (user && !urlDomain && user.domain != superDomain) {
            response.sendRedirect(utils.tenantedPrefix(urlPrefix, superDomain) + "dashboards/" + dashboardId);
            return;
        }

        editor = request.getParameter('editor');
        editor ? include('includes/designer.jag') : include('includes/renderer.jag');
        return;
    }

    if (method === 'POST') {
        dashboards = require('/modules/dashboards.js');
        utils = require('/modules/utils.js');

        dashboard = {
            id: dashboardId,
            title: request.getParameter('title'),
            description: request.getParameter('description'),
            permissions: {
                viewers: ['Internal/everyone'],
                editors: ['Internal/everyone']
            },
            pages: [],
            menu:[],
            hideAllMenuItems: false,
            identityServerUrl: "",
            accessTokenUrl: "",
            apiKey: "",
            apiSecret: "",
            theme: request.getParameter('select-theme')
    };

        utils.sandbox(context, function() {
            dashboards.create(dashboard);
        });

        response.sendRedirect(tenantedUrlPrefix + 'dashboards/' + dashboardId + '?editor=true');
        return;
    }

    response.sendError(400, 'Bad dashboard request');
}());
%>
