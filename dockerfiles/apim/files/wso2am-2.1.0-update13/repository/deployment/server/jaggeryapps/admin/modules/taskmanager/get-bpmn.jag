<%

var carbon = require('carbon');
var log = new Log();
var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
var MultitenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;

var workflowConfigs = carbon.server.osgiService('org.wso2.carbon.apimgt.impl.APIManagerConfigurationService').getAPIManagerConfiguration().getWorkflowProperties();

var serverUrl = workflowConfigs.getServerUrl();

var isEnabled = workflowConfigs.isEnabled();

var getBPMNTasks = function (taskName) {
    
    if(!isEnabled){
      return null;
    }

    var username = MultitenantUtils.getTenantAwareUsername(session.get("logged.user").username)
    var tenantId = APIUtil.getTenantId(session.get("logged.user").username);
    
    //In WSO2BPS for each tenant space has seperate rest api to access bpmn tasks
    var userDomain = MultitenantUtils.getTenantDomain(session.get("logged.user").username);
    if(userDomain != null && userDomain != "carbon.super"){
        var tenantBPMNserverUrl = "/t/" + userDomain + "/webapps/bpmn";
        serverUrl = serverUrl.replace("/bpmn", tenantBPMNserverUrl)
    }

    var headers = {};
    var auth = session.get("logged.user").auth;
    var cookie = session.get("workflowCookie");

    if(auth != null){
        var basicHeader = "Basic " + auth.toString();
        headers.authorization = basicHeader;
    } else if(cookie != null){
        headers.cookie = cookie;
    } else {
        log.warn("No Authentication header set")
    }

    var taskUrl = serverUrl + "/runtime/tasks?name=" + taskName+ "&tenantId=" + tenantId + "&candidateOrAssigned=" + username;
    var taskList = [];
    try{
        var response = get(taskUrl, {}, headers);
        if(response != null && response.data != null){
            taskList = JSON.parse(response.data).data;      
        }
    } catch (e) {
        log.error("Error while getting tasks " + e);
    }
   

return taskList;

};

%>
