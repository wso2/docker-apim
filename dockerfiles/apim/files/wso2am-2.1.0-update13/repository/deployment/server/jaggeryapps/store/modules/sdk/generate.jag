<%
var generateClientSDK = function (language, apiName, apiVersion, apiProvider){
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.APIClientGenerationManager;
    var generator = new sdkGen();
    var object = null;
    var log = new Log();

    try {
        var result = Packages.java.utils.Map;
        result = generator.generateSDK(language, apiName, apiVersion, apiProvider);
        if(result!=null){
            var zipFileName = result.get("zipFileName");
            var zipFilePath =  result.get("zipFilePath");
            var tempDirectoryPath = result.get("tempDirectoryPath");
            return {
                zipFileName:zipFileName,
                zipFilePath:zipFilePath,
                tempDirectoryPath:tempDirectoryPath,
                error:false
            };
        }
        else{
            return {
                message:"SDK generation failed.",
                error:true
            };
        }

    } catch (e) {
        log.error(e.message);
        if (e.javaException instanceof org.wso2.carbon.apimgt.impl.APIClientGenerationException){
            return {
                error:true,
                message:e.javaException.getErrorMessage()
            };
        } else {
            return {
                error:true,
                message:"Problem generating the SDK."
            };
        }
    }

};

var getSupportedLanguages = function()  {
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.APIClientGenerationManager;
    var generator = new sdkGen();
    var log = new Log();
    try {
        var langs = generator.getSupportedSDKLanguages();
        if(langs != null && "null" != langs)   {
            return  {
                langs:langs,
                error:false
            };
        } else  {
            return  {
                message:"No Supported Languages Configured",
                error:true
            };
        }
    } catch (e) {
        log.error(e.message);
        return  {
            error:true,
            message:"Error occurred while getting supported Languages"
        }
    }

};

var cleanTempDirectory = function(tempDirectoryPath)  {
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.APIClientGenerationManager;
    var generator = new sdkGen();
    var log = new Log();
    try {
        generator.cleanTempDirectory(tempDirectoryPath);
    } catch (e) {
        log.error(e.message);
        return  {
            error:true,
            message:"Error occurred while cleaning temp directory."
        }
    }
};
%>
